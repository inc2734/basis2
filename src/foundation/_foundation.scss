@use 'sass:list';
@use "sass:math";
@use '../variables/variables' as variables;

:root {
  /**
   * Column width in typography.
   */
  --measure: 38rem;

  /**
   * Collors.
   */
  --color-white: #fff;
  --color-black: #000;
  --color-text: #111;

  /**
   * Font size level.
   * It is not recommended to override this value with :root in order to have the size determined based on 0.
   */
  --font-size: 0;

  /**
   * Gutter provided above and below the text in a line.
   */
  --half-leading: .3;

  /**
   * Font family
   */
  --font-family: sans-serif;

  /**
   * Reference value of the modular scale for space.
   */
  --space-reference-value: .25;

  /**
   * Modular scales for spaces.
   */
  --s-2: calc(var(--space-reference-value) * 1rem * #{ list.nth(variables.$fibonacci-sequence, 1) });
  --s-1: calc(var(--space-reference-value) * 1rem * #{ list.nth(variables.$fibonacci-sequence, 2) });
  --s0: 0;
  --s1: calc(var(--space-reference-value) * 1rem * #{ list.nth(variables.$fibonacci-sequence, 3) });
  --s2: calc(var(--space-reference-value) * 1rem * #{ list.nth(variables.$fibonacci-sequence, 4) });
  --s3: calc(var(--space-reference-value) * 1rem * #{ list.nth(variables.$fibonacci-sequence, 5) });
  --s4: calc(var(--space-reference-value) * 1rem * #{ list.nth(variables.$fibonacci-sequence, 6) });
}

*,
*::before,
*::after {
  $min-font-size: #{ variables.$min-font-size };
  $max-font-size: #{ variables.$max-font-size };
  $preferred-font-size: calc((1rem * $min-font-size) + (#{ $max-font-size } - #{ $min-font-size }) * ((100vw - #{ 1rem * variables.$min-breakpoint }) / (#{ variables.$max-breakpoint - variables.$min-breakpoint })));

	box-sizing: border-box;
  font-size: clamp(1rem * #{ $min-font-size }, #{ $preferred-font-size }, 1rem * #{ $max-font-size });
  line-height: #{ variables.$space };
}

address,
article,
aside,
blockquote,
details,
dialog,
dd,
div,
dl,
dt,
fieldset,
figcaption,
figure,
footer,
form,
h1, h2, h3, h4, h5, h6,
header,
hgroup,
hr,
li,
main,
nav,
ol,
p,
pre,
section,
table,
ul {
  margin: 0;
  padding: 0;
}

body {
  background-color: var(--color-white);
  color: var(--color-text);
  font-family: var(--font-family);
  -webkit-font-smoothing: antialiased;
  // -moz-osx-font-smooting: grayscale; // White out elements will activate this.
  overflow-wrap: break-word;
}

li {
  margin-left: 1.5em;
}

small {
  font-size: smaller;
}

sup {
  font-size: smaller;

  @supports (font-variant-position: super) {
    font-variant-position: super;
    vertical-align: baseline;
    font-size: inherit;
  }
}

sub {
  font-size: smaller;

  @supports (font-variant-position: sub) {
    font-variant-position: sub;
    vertical-align: baseline;
    font-size: inherit;
  }
}

img,
figure {
  margin-top: calc(1rem * var(--half-leading));
  margin-bottom: calc(1rem * var(--half-leading));
}

figure > img {
  margin-top: 0;
  margin-bottom: 0;
}
