@mixin abstract-decorator() {
  --background-color: transparent;
  // --color: var(--color-text); // Comment out if you don't want it to be inherited.
  --border-color: transparent;
  --border-width: 0;
  --border-radius: 0;
  --padding: var(--s0);
  --box-shadow: none;
  --position: static;
  --top: initial;
  --right: initial;
  --bottom: initial;
  --left: initial;
  --z-index: initial;

  padding: calc((var(--padding) - var(--half-leading) * 1em)) var(--padding);
  border: var(--border-width) solid var(--border-color);
  border-radius: var(--border-radius);
  color: var(--color);
  background-color: var(--background-color);
  box-shadow: var(--box-shadow);
  position: var(--position);
  top: var(--top);
  right: var(--right);
  bottom: var(--bottom);
  left: var(--left);
  z-index: var(--z-index);

  &[data-layout~="-shadow"] {
    --box-shadow: var(--shadow);
  }

  &[data-layout~="-position\:relative"] {
    --position: relative !important;
  }

  &[data-layout~="-position\:absolute"] {
    --position: absolute !important;
  }

  &[data-layout~="-position\:sticky"] {
    --position: sticky !important;
  }

  &[data-layout~="-position\:fixed"] {
    --position: fixed !important;
  }
}

@mixin decorator() {
  [data-layout~="decorator"] {
    @include abstract-decorator();
  }
}
