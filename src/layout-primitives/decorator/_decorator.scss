@mixin abstract-decorator() {
  --unitone--background-color: transparent;
  // --unitone--color: var(--unitone--color-text); // Comment out if you don't want it to be inherited.
  --unitone--border-color: transparent;
  --unitone--border-width: 0;
  --unitone--border-radius: 0;
  --unitone--padding: var(--unitone--s0);
  --unitone--box-shadow: none;
  --unitone--position: static;
  --unitone--top: initial;
  --unitone--right: initial;
  --unitone--bottom: initial;
  --unitone--left: initial;
  --unitone--z-index: initial;

  padding: calc((var(--unitone--padding) - var(--unitone--half-leading) * 1em)) var(--unitone--padding);
  border: var(--unitone--border-width) solid var(--unitone--border-color);
  border-radius: var(--unitone--border-radius);
  color: var(--unitone--color);
  background-color: var(--unitone--background-color);
  box-shadow: var(--unitone--box-shadow);
  position: var(--unitone--position);
  top: var(--unitone--top);
  right: var(--unitone--right);
  bottom: var(--unitone--bottom);
  left: var(--unitone--left);
  z-index: var(--unitone--z-index);

  &[data-layout~="-shadow"] {
    --unitone--box-shadow: var(--unitone--shadow);
  }

  &[data-layout~="-position\:relative"] {
    --unitone--position: relative !important;
  }

  &[data-layout~="-position\:absolute"] {
    --unitone--position: absolute !important;
  }

  &[data-layout~="-position\:sticky"] {
    --unitone--position: sticky !important;
  }

  &[data-layout~="-position\:fixed"] {
    --unitone--position: fixed !important;
  }
}

@mixin decorator() {
  [data-layout~="decorator"] {
    @include abstract-decorator();
  }
}
