@mixin abstract-layers() {
  --unitone--columns: var(--unitone--grid-columns);
  --unitone--rows: var(--unitone--grid-rows);
  --unitone--gap: min(3.33333%, var(--unitone--grid-gap));
  --unitone--min-height: 0;

  @media (orientation: portrait) {
    &[data-unitone-layout~="-portrait"] {
      --unitone--columns: var(--unitone--grid-rows);
      --unitone--rows: var(--unitone--grid-columns);
    }
  }

  position: relative;
  display: grid;
  grid-template-columns: repeat(var(--unitone--columns), 1fr);
  grid-template-rows: repeat(var(--unitone--rows), 1fr);
  gap: var(--unitone--gap);
  min-height: var(--unitone--min-height);

  > * {
    --unitone--align-self: auto;
    --unitone--justify-self: auto;
    --unitone--grid-column: 1/-1;
    --unitone--grid-row: 1/-1;
    --unitone--max-width: none;

    position: relative;
    grid-column: var(--unitone--grid-column);
    grid-row: var(--unitone--grid-row);
    align-self: var(--unitone--align-self);
    justify-self: var(--unitone--justify-self);
    max-width: var(--unitone--max-width);
  }

  // @消したい
  // unitone theme では image block と video block に cover ブロックスタイルをもたせる
  &[data-unitone-layout~="-cover"] {
    > :where(img:first-child, video:first-child, picture:first-child, figure:first-child),
    > :first-child :where(picture, figure) {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      height: 100%;
      width: 100%;
    }

    > :where(img:first-child, video:first-child),
    > :first-child :where(img, video) {
      object-fit: cover;
      object-position: 50% 50%;
      height: 100%;
      width: 100%;
    }
  }
}

@mixin layers() {
  [data-unitone-layout~="layers"] {
    @include abstract-layers();
  }
}
