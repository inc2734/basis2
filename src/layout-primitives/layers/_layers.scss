@mixin abstract-layers() {
  --unitone--gap: var(--unitone--s1);
  --unitone--columns: 12;

  position: relative;
  display: grid;
  grid-template-columns: repeat(var(--unitone--columns), 1fr);
  grid-template-rows: max-content;
  gap: var(--unitone--gap);
  overflow: hidden;

  > * {
    --unitone--align-self: auto;
    --unitone--justify-self: auto;
    --unitone--grid-column: 1/-1;
    --unitone--grid-row: 1/-1;

    position: relative;
    grid-column: var(--unitone--grid-column);
    grid-row: var(--unitone--grid-row);
    align-self: var(--unitone--align-self);
    justify-self: var(--unitone--justify-self);
  }

  &[data-layout~="-cover"] {
    > :where(img:first-child, video:first-child, picture:first-child, figure:first-child),
    > :first-child :where(picture, figure) {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      height: 100%;
      width: 100%;
    }

    > :where(img:first-child, video:first-child),
    > :first-child :where(img, video) {
      object-fit: cover;
      object-position: 50% 50%;
      height: 100%;
      width: 100%;
    }
  }
}

@mixin layers() {
  [data-layout~="layers"] {
    @include abstract-layers();
  }
}
