@mixin abstract-layers() {
  position: relative;
  display: grid;
  grid-auto-rows: min-content;
  overflow: hidden;

  > * {
    --align-self: stretch;
    --justify-self: stretch;

    position: relative;
    grid-area: 1/1;
    align-self: var(--align-self);
    justify-self: var(--justify-self);
  }

  > :is(img, video),
  > :is(picture, figure) > :is(img, video),
  > figure > picture > :is(img, video) {
    margin-top: 0;
    margin-bottom: 0;
    object-fit: cover;
    object-position: 50% 50%;
  }

  > :is(picture, figure) > :is(img, video),
  > figure > picture > :is(img, video) {
    height: 100%;
    width: 100%;
  }

  &[data-layout~="-cover"] {
    > :is(img, video, picture, figure) {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      height: 100%;
      width: 100%;
    }
  }
}

@mixin layers() {
  [data-layout~="layers"] {
    @include abstract-layers();
  }
}
